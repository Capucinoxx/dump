image: golang:latest

stages:
  - vet
  - test
  - healthcheck
  - deploy

govet:
  stage: vet
  script:
    - cd src
    - go vet -all ./...


gotest:
  stage: test
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t wordle-test . -f Dockerfile.test
    - docker run wordle-test


healthcheck:
  stage: healthcheck
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - apk add --no-cache curl
  script:
    - docker build -t wordle . -f Dockerfile
    - docker run -d --name igl601 -p 8080:8080 wordle
    - CONTAINER_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' igl601)
    - |
      success=false
      for i in $(seq 1 10); do
        if curl -s -o /dev/null -w "%{http_code}" http://$CONTAINER_IP:8080/ | grep 200; then
          echo "Service fonctionnel !"
          success=true
          break
        else
          docker ps
          echo "Tentative $i/10: Le service n'est pas encore prêt..."
        fi
        sleep 3
      done

      if [ "$success" = false ]; then
        echo "Le test de a échoué après 10 tentatives."
        exit 1
      fi


deploy:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - echo "=== Wordle build & deploy ==="
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA . -f Dockerfile
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
